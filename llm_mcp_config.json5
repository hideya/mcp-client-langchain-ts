// The configuration file format is [JSON5](https://json5.org/),
// where comments and trailing commas are allowed.
// The file format is further extended to replace `${...}` notations
// with the values of corresponding environment variables.
// Keep all the credentials and private into the `.env` file
// and refer to them with `${...}` notation as needed.
{
    // "llm": {
    //     // https://docs.anthropic.com/en/docs/about-claude/pricing
    //     "model_provider": "anthropic",
    //     "model": "claude-3-5-haiku-latest",
    //     // "model": "claude-sonnet-4-0",
    //     // "temperature": 0.0,
    //     // "max_tokens": 10000,
    // },

    "llm": {
        // https://platform.openai.com/docs/pricing
        "model_provider": "openai",
        "model": "gpt-4o-mini",
        // model: "o4-mini",
        // "temperature": 0.0,  //  'temperature' is not supported with "o4-mini"
        // "max_completion_tokens": 10000,  //  Use 'max_completion_tokens' instead of 'max_tokens'
    },

    // "llm": {
    //     // https://ai.google.dev/gemini-api/docs/pricing
    //     "model_provider": "google_genai",
    //     model: "gemini-2.0-flash",
    //     // model: "gemini-2.5-pro-preview-06-05",
    //     // "temperature": 0.0,
    //     // "max_tokens": 10000,
    // },

    "example_queries": [
        "Read the news headlines on bbc.com",
        "Read and briefly summarize the LICENSE file",
        "Tomorrow's weather in SF?",
    ],

    "mcp_servers": {
        // https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem
        "filesystem": {
            "command": "npx",
            "args": [
                "-y",
                "@modelcontextprotocol/server-filesystem",
                "."
            ]
        },
        // https://github.com/modelcontextprotocol/servers/tree/main/src/fetch
        "fetch": {
            "command": "uvx",
            "args": [
                "mcp-server-fetch"
            ]
        },
        // https://github.com/modelcontextprotocol/quickstart-resources/tree/main/weather-server-python
        "weather": {
            "command": "npx",
            "args": [
                "-y",
                "@h1deya/mcp-server-weather"
            ]
        },

        // // Auto-detection: tries Streamable HTTP first, falls back to SSE on 4xx errors
        // "auto-detect-server": {
        //     url: `http://${server_host}:${server_port}/...`
        // },

        // // WebSocket
        // "ws-server-name": {
        //     url: `ws://${ws_server_host}:${ws_server_port}/...`
        // },

        // weather: {
        //     "url": "http://localhost:${SSE_SERVER_PORT}/sse"
        // },

        // // https://github.com/microsoft/playwright-mcp
        // "playwright": {
        //     "command": "npx",
        //     "args": [
        //         "-y",
        //         "@playwright/mcp@latest"
        //     ]
        // },
        // // https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search
        // "brave-search": {
        //     "command": "npx",
        //     "args": [
        //         "-y",
        //         "@modelcontextprotocol/server-brave-search"
        //     ],
        //     "env": {
        //         "BRAVE_API_KEY": "${BRAVE_API_KEY}"
        //     }
        // },
    }
}
